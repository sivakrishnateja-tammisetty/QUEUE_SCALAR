QUEUE:
  1.It also ordered list of similar datatypes.
  2.It follows (FIFO).
  3.Once a new element is inserted into queue,all the elements need to remove before insertded elements to remove new element.
OPERATIONS IN QUEUE:
  PUSH:inserts new element at the end of queue.
  POP:Deletes first element of queue.
  FRONT:it returns first element
  BACK:it returns the last element
  SIZE:it returns number of elements in queue
  EMPTY:returns true if queue is empty

TIME COMPLEXITY: for all operations is O(1).





//GIVEN AN ARRAY OF INTGERS<YOU NEED TO PUSH ALL ELEMENTS OF AN ARRAY INTO QUEUE AND PRINT QUEUE
#include <bits/stdc++.h>
using namespace std;
int main() {
    int a[]={11,12,13,14,15};
    queue<int>q;
    for(int i=0;i<5;i++)
    {
        q.push(a[i]);

    }
    cout<<"Queue elements are:";
    while(!q.empty())
    {
        cout<<q.front()<<" ";
        q.pop();
    }
    return 0;
}






//PRINTING FIFO ORDER USING STACK
#include <bits/stdc++.h>
using namespace std;
int main() {
    int a[]={1,2,3,4,5};
    stack<int>s1;
    for(int i=0;i<5;i++)
    {
        s1.push(a[i]);
    }
    stack<int>s2;
    while(!s1.empty())
    {
        s2.push(s1.top());
        s1.pop();
    }
    cout<<"Printing stack elements using FIFO:";
    while(!s2.empty())
    {
        cout<<s2.top()<<" ";
        s2.pop();
    }
    return 0;
}
